#pragma checksum "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "04a104ee7476629458613cbc0114b1e219c3645d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_ShowDetailMyCart), @"mvc.1.0.view", @"/Views/Product/ShowDetailMyCart.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\_ViewImports.cshtml"
using GProject.WebApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\_ViewImports.cshtml"
using GProject.WebApplication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"04a104ee7476629458613cbc0114b1e219c3645d", @"/Views/Product/ShowDetailMyCart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b08ccb6f7db288cae79c4c47cdc6330c880c5d3c", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_ShowDetailMyCart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<GProject.WebApplication.Models.CartDTO>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width: 90px;height: 110px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formdata"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Order/Order"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal d-block"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
  
    ViewBag.Title = "Giỏ Hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";


    IList<SelectListItem> StoreItems = new List<SelectListItem>();
    int brand = int.Parse(Html.Encode(ViewData["brand"]));
    if (Model.Select(c => c.Brand).ToList().Count > 0)
    {
        StoreItems.Add(new SelectListItem()
                {
                    Value = "-1",
                    Text = "-- Tất cả --",
                    Selected = "-1" == brand.ToString(),
                });

        foreach (var br in Model.Select(c => c.Brand).ToList().Distinct())
        {
            if (StoreItems.FirstOrDefault(c => c.Value == br.Id.ToString()) == null)
            {
                StoreItems.Add(new SelectListItem()
                        {
                            Value = br.Id.ToString(),
                            Text = br.Name,
                            Selected = br.Id == brand,
                        });
            }
        }
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link href=\"/css/showCart.css\" rel=\"stylesheet\">\r\n\r\n");
#nullable restore
#line 36 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
 if (@ViewData["Mess"] != null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <p style=\"visibility: hidden;\" id=\"error\">");
#nullable restore
#line 38 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                         Write(ViewData["Mess"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n");
#nullable restore
#line 39 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container\" style=\"margin-top: 200px; margin-bottom: 200px;\">\r\n<div class=\"super_container\"  >\r\n    <div class=\"col product_section clearfix\">\r\n\r\n        <!-- Sidebar -->\r\n        <div class=\"row\">\r\n");
            WriteLiteral(@"            <div class=""main_content col-md-12"">
                <div class=""row"">
                    <div class=""panel-heading"">
                        <h3 class=""panel-title"" style=""text-align:center; height:50px; padding:10px 10px 10px 10px;""><i class=""fa fa-cubes"" aria-hidden=""true"" style=""margin-right:10px;""></i>Danh sách sản phẩm</h3>
                    </div>
                        <div class=""panel panel-default"" id=""selected-inv-panel""");
            BeginWriteAttribute("style", " style=\"", 7669, "\"", 7677, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                            <div class=""panel-body"">
                                <p>
                                    <span style=""color: gray;"">
                                        <i class=""fa fa-check-circle-o""></i>Đã chọn
                                    </span>
                                    <b id=""selected-invs"" style=""color: #ef594a;;"">0</b>
                                    <span style=""color: gray;"">
                                        trên tổng số
                                    </span>
                                    <b style=""color: #ef594a;;"">");
#nullable restore
#line 127 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                           Write(Model.Select(c => c.CartDetail).Count());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</b>
                                    <span style=""color: gray;"">
                                        sản phẩm
                                    </span>
                                </p>
                            </div>
                        </div>
                    <div class=""panel panel-default"">
                        
                        <div class=""panel-body"">
                            <div class=""table-responsive"" style=""overflow-y: auto; max-height: 700px;"">
                                <table class=""table table-bordered table-hover sticky-table"">
                                    <thead class=""sticky-header"">
                                        <tr>
                                            <th>STT</th>
                                            <th style=""width:100px;"">Hình ảnh</th>
                                            <th style=""width:220px;"">Tên sản phẩm</th>
                                            <th>Nhãn hiệu</th>
              ");
            WriteLiteral(@"                              <th>Phân loại sản phẩm</th>
                                            <th>Đơn giá</th>
                                            <th>Số lượng</th>
                                            <th>Thành tiền</th>
                                            <th style=""width: 40px; text-align: center"">
                                                ");
#nullable restore
#line 150 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                           Write(Html.CheckBox("ckbAll", new { style="vertical-align:middle;"}));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n");
#nullable restore
#line 155 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                         if (Model != null && Model.Count() > 0)
                                        {
                                            int i = 0;
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 158 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                             foreach (var item in Model)
                                            {
                                                i++;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                                <tr>\r\n                                                    <td hidden><input class=\"itemQuantityInstock\" disabled hidden=\"hidden\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 10534, "\"", 10582, 1);
#nullable restore
#line 162 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 10542, item.ProductVariation.QuantityInStock, 10542, 40, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></td>\r\n                                                    <td hidden><input class=\"cartId\" disabled hidden=\"hidden\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 10712, "\"", 10756, 1);
#nullable restore
#line 163 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 10720, item.CartDetail.CartId.ToString(), 10720, 36, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></td>\r\n                                                    <td hidden><input class=\"prodVariationId\" disabled hidden=\"hidden\" type=\"text\"");
            BeginWriteAttribute("value", " value=\"", 10895, "\"", 10951, 1);
#nullable restore
#line 164 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 10903, item.CartDetail.ProductVariationId.ToString(), 10903, 48, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></td>\r\n                                                    <td class=\"text-center\">");
#nullable restore
#line 165 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                                       Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>\r\n                                                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "04a104ee7476629458613cbc0114b1e219c3645d14858", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "src", 2, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            AddHtmlAttributeValue("", 11204, "~/images/", 11204, 9, true);
#nullable restore
#line 167 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
AddHtmlAttributeValue("", 11213, item.ProductVariation.Image, 11213, 28, false);

#line default
#line hidden
#nullable disable
            EndAddHtmlAttributeValues(__tagHelperExecutionContext);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                                    </td>\r\n                                                    <td>");
#nullable restore
#line 169 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                   Write(item.Product.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>");
#nullable restore
#line 170 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                   Write(item.Brand.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>Màu: ");
#nullable restore
#line 171 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                         Write(item.Color.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral(" <br /> Size: ");
#nullable restore
#line 171 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                                                                         Write(item.Size.Code);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                                    <td>\r\n                                                        <input type=\"text\" class=\"price align-right textr inputOrder\" readonly maxlength=\"18\"");
            BeginWriteAttribute("value", " value=\"", 11782, "\"", 11831, 1);
#nullable restore
#line 173 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 11790, item.CartDetail.Price.ToString("0.##"), 11790, 41, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
                                                    </td>
                                                    <td class=""col-1"">
                                                        <div class=""buttons_added "">
                                                            <input class=""minus is-form inputOrder"" type=""button"" value=""-"" style=""width:20px;"">
                                                            <input aria-label=""quantity"" style=""width: 50px;"" class=""quantity inputOrder"" type=""text"" id=""quantity"" name=""quantity""");
            BeginWriteAttribute("value", " value=\"", 12379, "\"", 12412, 1);
#nullable restore
#line 178 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 12387, item.CartDetail.Quantity, 12387, 25, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" min=""1"" max=""100000"">
                                                            <input class=""plus is-form inputOrder"" type=""button"" value=""+"" style=""width:20px;"">
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <input class=""totalMoneyItem inputOrder"" readonly type=""text""");
            BeginWriteAttribute("value", " value=\"", 12880, "\"", 12917, 1);
#nullable restore
#line 183 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
WriteAttributeValue("", 12888, item.CartDetail.ToatlMoney, 12888, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@">
                                                    </td>
                                                    <td class=""text-center"">
                                                        <input name=""cbid"" id=""cbid"" type=""checkbox"" class=""ckbProdItem"" onclick=""changeSelectedProd(this)""");
            BeginWriteAttribute("value", " value=\"", 13213, "\"", 13221, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                                                    </td>\r\n                                                </tr>\r\n");
#nullable restore
#line 189 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 189 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                             
                                        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <th colspan=""6""><h5>Tổng tiền thanh toán:</h5></th>
                                            <th colspan=""3""><h5 style=""color: red;""><input class=""inputOrder"" id=""totalPayment"" style=""color:red; text-align:right;"" /> đ</h5></th>
                                        </tr>
                                    </tfoot>
                                </table>
                                <div class=""row"">
                                    <div style=""margin-bottom: 10px;"">
                                        <button type=""submit"" id=""btnOrder"" class="" col-md-2 btn btn-outline-danger""><i class=""fa fa-shopping-bag "" style=""margin-right:10px;""></i>Đặt mua</button>
                                        <button type=""button"" id=""btnOrder"" onclick=""RemoveToCart()"" class=""btn btn-outline-danger col-md-2""><i class=""fa ");
            WriteLiteral(@"fa-trash-o"" style=""margin-right:10px;""></i>Gỡ khỏi giỏ hàng</button>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class=""modal"" id=""OrderModal"" role=""dialog"">
    <div class=""modal-dialog modal-md"" style=""text-align:left; background-color:white; max-width:900px"">
        <div style=""width:900px;"">
            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "04a104ee7476629458613cbc0114b1e219c3645d23410", async() => {
                WriteLiteral(@"
                <div class=""modal-content justify-content-center"" style=""border-width:1px;"">
                    <div class=""modal-header "">
                        <h4 class=""modal-title text-center"">Thông tin đơn hàng</h4>
                    </div>
                    <div class=""modal-body"">
                        <input type=""text"" id=""cTotalMoney"" name=""cTotalMoney"" hidden=""hidden"" />
                        <input type=""text"" id=""cShippingFee"" name=""cShippingFee"" hidden=""hidden"" />
                        <input type=""text"" id=""idDeliveryAddress"" name=""idDeliveryAddress""");
                BeginWriteAttribute("value", " value=\"", 15704, "\"", 15712, 0);
                EndWriteAttribute();
                WriteLiteral(" hidden=\"hidden\" />\r\n                        <input type=\"text\" id=\"cGiamGia\" name=\"cGiamGia\"");
                BeginWriteAttribute("value", " value=\"", 15806, "\"", 15814, 0);
                EndWriteAttribute();
                WriteLiteral(@" hidden=""hidden"" />

                        <div class=""row"">
                            <div class=""row"">
                                <div class=""form-group"">
                                    <label class=""control-label col-sm-5"">Địa chỉ đặt hàng:<span style=""color: red"">(*)</span></label>
                                    <div class=""col-sm-12"">
                                        <select id=""selectDeliveryAddress"" class=""form-select"">
                                        </select>
                                        <button style=""margin-top: 5px;"" class=""btn btn-success"" onclick=""OpenDeliveryAddress(); return false;"" data-toggle=""ajax-modal"" data-target=""#showDataDeliveryAddress"" data-url=""/DeliveryAddress/Index"">
                                            Thêm
                                        </button>
                                    </div>

                                </div>
                            </div>
                        </div>
         ");
                WriteLiteral(@"               <div class=""row"">
                            <div class=""row"" style=""margin-top: 15px;"">
                                <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-sm-5"">Email:<span style=""color: red"">(*)</span></label>
                                    <div class=""col-sm-12"">
                                        <input type=""email"" id=""ShippingEmail"" name=""ShippingEmail""");
                BeginWriteAttribute("value", " value=\"", 17345, "\"", 17353, 0);
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 17354, "\"", 17368, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control"" />
                                    </div>
                                </div>
                                </div>
                                <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-sm-6"">Phương thức thanh toán:<span style=""color: red"">(*)</span></label>
                                    <div class=""col-sm-12"">
");
#nullable restore
#line 257 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                          
                                            int PaymentType = 0;
                                        

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        ");
#nullable restore
#line 260 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                   Write(Html.DropDownList("PaymentType",new[]
                                        {
                                        new SelectListItem{Text="Thanh toán khi nhận hàng", Value="0", Selected= (PaymentType== 0)},
                                        new SelectListItem{Text="Thanh toán khi đặt hàng", Value="1", Selected= (PaymentType== 1)},
                                        }, new { @name = "PaymentType", @class="searchText form-control select"}));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                    </div>
                                </div>
                                </div>
                            </div>

                            <div class=""row"" style=""margin-top: 15px;"">
                                <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-sm-6"">Mã giảm giá:</label>
                                    <div class=""col-sm-12"">
                                        <select id=""selectVoucher"" name=""selectVoucher"" class=""form-select"">
                                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "04a104ee7476629458613cbc0114b1e219c3645d28949", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        </select>
                                    </div>
                                </div>
                                </div>
                                <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-sm-5"">Nhập mã giảm giá:<span style=""color: red"">(*)</span></label>
                                    <div class=""row col-md-12"">
                                        <div class=""col-sm-8"">
                                            <input type=""text"" id=""DiscountCode"" name=""DiscountCode""");
                BeginWriteAttribute("value", " value=\"", 19836, "\"", 19844, 0);
                EndWriteAttribute();
                BeginWriteAttribute("placeholder", " placeholder=\"", 19845, "\"", 19859, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""form-control"" />
                                        </div>
                                        <div class=""col-sm-4"">
                                            <a class=""btn btn-outline-info"" onclick=""CheckDiscountCode()""><i class=""fa-solid fa-check fa-lg""></i></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                            
                            <div class=""row"" style=""margin-top: 15px;"">
                                <label class=""control-label col-sm-3"">Mô tả của bạn:</label>
                                <div class=""col-sm-12"">
                                    <textarea class=""form-control"" name=""cDescription"" id=""cDescription"" cols=""50"" rows=""5"" style=""border:double 4px orange;""></textarea>
                                </div>
                            </div>
                            <d");
                WriteLiteral(@"iv class=""form-group row"" >
                            <div class=""form-group row"" style=""margin-top: 15px;"">
                                <div class=""col-sm-9"">
                                    <label class=""control-label col-md-12"">Phí ship:</label>
                                </div>
                                <div class=""col-sm-3"">
                                    <p><label id=""txtPhiShip"">0</label><label style=""margin-left: 5px;"">đ</label></p>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-sm-9"">
                                    <label class=""control-label col-md-12""><label>Giảm giá:</label></label>
                                </div>
                                <div class=""col-sm-3"">
                                    <p><label>- </label> <label id=""txtGiamGia"">0</label><label style=""margin-left: 5px;"">đ</label></p>
              ");
                WriteLiteral(@"                  </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-sm-9"">
                                    <label class=""control-label col-md-12""><label>Tổng tiền sản phẩm:</label></label>
                                </div>
                                <div class=""col-sm-3"">
                                    <p><label id=""txtTotalProduct""></label><label style=""margin-left: 5px;"">đ</label></p>
                                </div>
                            </div>
                            <div class=""form-group row"">
                                <div class=""col-sm-9"">
                                    <h5><label class=""control-label col-md-12""><label>Tổng tiền thanh toán:</label></label></h5>
                                </div>
                                <div class=""col-sm-3"">
                                    <h5><label style=""color:red;"" id=""textTotalMoney""></label>");
                WriteLiteral(@"<label style=""margin-left: 5px;color:red;"">đ</label></h5>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""submit"" class=""btn btn-sm btn-success"" id=""cpCopyBtn""><i class=""fa fa-check"" aria-hidden=""true""></i> Đặt hàng</button>
                        <button type=""button"" class=""btn btn-sm btn-default btn-dimiss-modal"" id=""btnCloseModal"">
                            <i class=""fa fa-times""></i> Đóng
                        </button>
                    </div>
                </div>

            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
    </div>
</div>
</div>

<script type=""text/javascript"">
    $(document).ready(function () {
        document.querySelector('#formdata').addEventListener('submit', function (e) {
            var form = this;
            e.preventDefault();
            if (checkValidateData()) {
                swal(""Bạn chắc chắn muốn đặt đơn hàng này?"", {
                    title: 'Bạn chắc chắn muốn đặt đơn hàng này?',
                    icon: 'info',
                    buttons: [""Không, tôi cần xem lại"", ""Có, tôi đồng ý""],
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        form.submit();
                    } else {
                        swal(""Đã hủy"", ""Bạn đã không lưu những thay đổi này!"", ""error"");
                    }
                });
            }
        });

        $(""input.quantity"").change(function(){
            var _priceVal = parseFloat($(this).parents(""tr"").find(""input[type=text].price"").val()) || 0;");
            WriteLiteral(@"
            var _quantityVal = parseFloat($(this).val()) || 0;
            $(this).parents(""tr"").find(""input[type=text].totalMoneyItem"").val(_priceVal * _quantityVal);
            loadMoney();
        });

        $('input.quantity').keyup(function () {
            let regex = /^[0-9]+$/;
            if (!regex.test($(this).val()))
                $(this).val($(this).val().replace(/[^0-9.]/g, """"));
        });
        

        $(""#selectDeliveryAddress"").change(function () {
            let _id = $(""#selectDeliveryAddress"").val();
            $.ajax({
                url: ""/Product/GetDataDeliveryAddress?id="" + _id,
                type: ""GET"",
                success: function (result) {
                    if (result != null) {
                        ShippingFee(result.districtID, result.wardCode)
                        $(""#idDeliveryAddress"").val(result.id)
                    }
                    else {
                        var total = parseFloat(document.querySelector('#txt");
            WriteLiteral(@"TotalProduct').innerText.replace(/,/g, '')) - parseFloat(document.querySelector('#txtGiamGia').innerText.replace(/,/g, ''))
                        if (total < 0) {
                            total = 0;
                        }
                        swal(""Thông báo!"", ""Bạn không được để trống thông tin địa chỉ!"", ""error"");
                        $(""#txtPhiShip"").text(commasThousands(0))
                        $('#textTotalMoney').text(commasThousands(total));
                        $('#cTotalMoney').val(total);
                        $('#cShippingFee').val(0);
                    }
                }
            })
        });

        function ShippingFee(district_id, ward_code) {
            $.ajax({
                url: ""/Product/ShippingFee?district_id="" + district_id + ""&ward_code="" + ward_code,
                type: ""GET"",
                success: function (result) {
                    var total = 0;
                    total = parseFloat(document.querySelector('#txtTotalProd");
            WriteLiteral(@"uct').innerText.replace(/,/g, '')) + result - parseFloat(document.querySelector('#txtGiamGia').innerText.replace(/,/g, ''));                    
                    if (total < 0) {
                        total = 0;
                    }
                    $('#textTotalMoney').text(commasThousands(total));
                    $('#cTotalMoney').val(total);
                    $('#cShippingFee').val(result);
                    $(""#txtPhiShip"").text(commasThousands(result))
                }
            })
        }

        function GetDataVoucher(totalMoneyOrder) {
            $.ajax({
                url: ""/Product/GetVoucher?totalMoneyOrder="" + totalMoneyOrder,
                type: ""GET"",
                success: function (result) {
                    var renderData = ""<option></option>"";
                    $.each(result, function (value) {
                        var date = result[value].expirationDate;
                        renderData += '<option value=""' + result[value].id + '""");
            WriteLiteral(@">' + result[value].name + '</option>';
                        renderData += '<option disabled style = ""font-style:italic"" > (Đơn Tối Thiểu ' + commasThousands(result[value].minimumOrder) + 'đ)' + '</option>'

                        if(result[value].discountForm == ""%"")
                            renderData += '<option disabled style = ""font-style:italic"" > (Giảm tối đa ' + commasThousands(result[value].maximumDiscount) + 'đ)' + '</option>'

                        renderData += '<option disabled style = ""font-style:italic"" > (HSD: ' + ConvertDate(date) + ')' + ' </option>'
                        renderData += '<option disabled style=""font-style:italic""></option>'
                    });
                    $(""#selectVoucher"").html(renderData)
                }
            })
        }

        $(""#selectVoucher"").change(function () {
            $(""#DiscountCode"").val('')

            let _id = $(""#selectVoucher"").val();
            $.ajax({
                url: ""/Product/GetVoucher?id=");
            WriteLiteral(@""" + _id,
                type: ""GET"",
                success: function (result) {
                    let totalProduct = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/,/g, ''));
                    let discount = 0;
                    var total = 0;
                    if (result != null) {
                        if (result.discountForm == ""%"") {
                            discount = Math.round(TinhPhanTram(totalProduct, result.discountRate))
                            if(discount > result.maximumDiscount)
                                discount = result.maximumDiscount
                        }
                        else {
                            discount = result.discountRate
                        }
                        $(""#txtGiamGia"").text(commasThousands(discount))
                        total = totalProduct - discount + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/,/g, ''));
                    }
                    el");
            WriteLiteral(@"se {
                        swal(""Thông báo!"", ""Mã giảm giá không được áp dụng!"", ""error"");
                        $(""#txtGiamGia"").text(0)
                        $(""#txtDiscountForm"").text(""đ"")
                        total = totalProduct + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/,/g, ''));
                    }
                    
                    if(total < 0)
                    {
                        total = 0;
                    }

                    $('#textTotalMoney').text(commasThousands(total));
                    $('#cTotalMoney').val(total);
                    $('#cGiamGia').val(discount);
                }
            })
        });        

        

        function ConvertDate(time) {
            var date = new Date(time);
            var dateConvert = (((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + date.getFullYear(");
            WriteLiteral(@"))
            return dateConvert
        }

        $('input.quantity').each(function () {
            var $this = $(this),
                qty = $this.parent().find('.is-form'),
                min = Number($this.attr('min')),
                max = Number($this.attr('max'))
            if (min == 0) {
                var d = 0
            } else d = min
            $(qty).on('click', function () {
                if ($(this).hasClass('minus')) {
                    if($this.val() > 1)
                        $this.val(Number($this.val()) - 1);
                } else if ($(this).hasClass('plus')) {
                    $this.val(Number($this.val()) + 1);
                }
                //$this.attr('value', d).val(d);
                var _priceVal = parseFloat($(this).parents(""tr"").find(""input[type=text].price"").val()) || 0;
                var _quantityVal = parseFloat($(this).parents(""tr"").find(""input[type=text].quantity"").val()) || 0;
                $(this).parents(""tr"").find(""inpu");
            WriteLiteral(@"t[type=text].totalMoneyItem"").val(_priceVal * _quantityVal);
                loadMoney();
            })
        });






        $('#ckbAll').change(function () {
            if ($(this).is(':checked')) {
                $('.ckbProdItem').prop('checked', true);
                $('#selected-invs').text(");
#nullable restore
#line 531 "C:\Users\Admin\Documents\GProject\GProject.WebApplication\GProject.WebApplication\Views\Product\ShowDetailMyCart.cshtml"
                                    Write(Model.Select(c => c.CartDetail).Count());

#line default
#line hidden
#nullable disable
            WriteLiteral(@");
                loadMoney();
            } else {
                $('.ckbProdItem').prop('checked', false);
                $('#totalPayment').val(0);
                $('#selected-invs').text('0');
            }
        });

        $('#btnOrder').click(function () {
            // Lấy số lượng checkbox đã được chọn
            var length = $('input[name=cbid]:checked').length;

            // Nếu không có checkbox nào được chọn, hiển thị thông báo lỗi
            if (length == 0) {
                swal('Lỗi', 'Bạn chưa chọn sản phẩm', 'error');
                return;
            }

            DataAddressCustomer()

            var total = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/,/g, ''))
            GetDataVoucher(total);
            $('#textTotalMoney').text(commasThousands(total));
            $('#cTotalMoney').val(total);

            var products = [];
            $('input[name=cbid]:checked').each(function () {
                var itemQua");
            WriteLiteral(@"ntityInstock = parseInt($(this).parents(""tr"").find(""input[type=text].itemQuantityInstock"").val()) || 0;
                var _quantity = parseInt($(this).parents(""tr"").find(""input[type=text].quantity"").val()) || 0;
                if (_quantity > itemQuantityInstock) {
                     swal('Xin lỗi', 'Số lượng còn lại của sản phẩm không đáp ứng được số lượng bạn đặt!', 'warning');
                    products = [];
                     return;
                }
                var _product = {};
                _product.cartId = $(this).parents(""tr"").find(""input[type=text].cartId"").val();
                _product.prodVariationId = $(this).parents(""tr"").find(""input[type=text].prodVariationId"").val();
                _product.size = $(this).parents(""tr"").find(""select.size"").val();
                _product.price = parseFloat($(this).parents(""tr"").find(""input[type=text].price"").val()) || 0;
                _product.quantity = _quantity;
                _product.totalMoneyItem = parseFloat($(this)");
            WriteLiteral(@".parents(""tr"").find(""input[type=text].totalMoneyItem"").val()) || 0;
                products.push(_product);
            });
            if (products.length == 0) {
                 return;
            }
            else {
                //Lấy danh sách sản phẩm và Session
                $.ajax({
                    data: {
                        products: JSON.stringify(products)
                    },
                    contentType: 'application/json',
                    dataType: 'json',
                    url: '/Product/Order',
                    type: 'GET'
                });

                //Lấy thông tin người dùng
                $.ajax({
                    contentType: 'application/json',
                    dataType: 'json',
                    url: '/Product/GetCustomerInfo',
                    type: 'GET',
                    success: function (result) {
                        $(""#ShippingFullName"").val(result.name);
                        $(""#ShippingPhone""");
            WriteLiteral(@").val(result.phoneNumber);
                        //$(""#ShippingAddress"").val(result.address);
                        $(""#ShippingEmail"").val(result.email);
                    }
                });
                $('#OrderModal').modal('show');
            }
        });

        $('#btnCloseModal').click(function () {
            $('#OrderModal').modal('hide');
        });

        var er = document.getElementById('error')
        if (er != null) {
            if ($('#error').text() == 'Failed')
                swal(""Không thành công"", ""Thao tác thất bại, vui lòng thực hiện lại"", ""error"");
            else
                swal(""Thành công"", ""Thao tác thành công"", ""success"");
        }
    });

    function TinhPhanTram(tongtien, giamgia) {
        let thanhtien = tongtien - (tongtien * ((100 - giamgia) / 100))
        return thanhtien
    }

    function CheckDiscountCode() {
        $(""#selectVoucher"").val(0)

        let _discountCode = $(""#DiscountCode"").val();
        $.");
            WriteLiteral(@"ajax({
            url: ""/Product/GetVoucher?discountCode="" + _discountCode,
            type: ""GET"",
            success: function (result) {
                let totalProduct = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/,/g, ''));
                let discount = 0;
                var total = 0;
                if (result != null) {
                    if (result.discountForm == ""%"") {
                        discount = Math.round(TinhPhanTram(totalProduct, result.discountRate))
                        if (discount > result.maximumDiscount)
                            discount = result.maximumDiscount
                    }
                    else {
                        discount = result.discountRate
                    }
                    $(""#txtGiamGia"").text(commasThousands(discount))
                    total = totalProduct - discount + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/,/g, ''));
                }
                else");
            WriteLiteral(@" {
                    swal(""Thông báo!"", ""Mã giảm giá không được áp dụng!"", ""error"");
                    $(""#txtGiamGia"").text(0)
                    $(""#txtDiscountForm"").text(""đ"")
                    total = totalProduct + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/,/g, ''));
                }

                if (total < 0) {
                    total = 0;
                }

                $('#textTotalMoney').text(commasThousands(total));
                $('#pTotalMoney').val(total);
                $('#cGiamGia').val(discount);
            }
        })
    }


    function loadMoney() {
        var _totalPaymentMoney = 0;
        $('table tbody tr .totalMoneyItem').each((index, item) => {
            var _price = parseFloat($(item).parents(""tr"").find(""input[type=text].price"").val()) || 0;
            var _quantity = parseInt($(item).parents(""tr"").find(""input[type=text].quantity"").val()) || 0;
            var ckecedItem = $(item).parents(""tr"").find(""inpu");
            WriteLiteral(@"t[type=checkbox].ckbProdItem"");
            if (ckecedItem.is(':checked')) {
                $(item).val(_price * _quantity);
                _totalPaymentMoney += parseFloat($(item).val());
            }
            
        });
        $('#totalPayment').val(_totalPaymentMoney);
        //$('#cTotalMoney').val(_totalPaymentMoney);
        $('#txtTotalProduct').text(commasThousands(_totalPaymentMoney));
    }


    function OpenDeliveryAddress() {
        $('#OrderModal').modal('hide');
    }


    function changeSelectedProd(param) {
        var totalItem = parseFloat($(param).parents(""tr"").find(""input[type=text].totalMoneyItem"").val()) || 0;
        var _totalPayment = parseFloat($('#totalPayment').val()) || 0;
        var selectedCount = parseInt($('#selected-invs').text()) || 0;
        if (param.checked) {
            $('#selected-invs').text(selectedCount + 1);
            $('#totalPayment').val(_totalPayment + totalItem);
        } else {
            $('#totalPayment').val(_t");
            WriteLiteral(@"otalPayment - totalItem);
            $('#selected-invs').text(selectedCount - 1);
        }
        loadMoney();
    }

    function commasThousands(nStr) {
        nStr += '';
        nStr = nStr.replace(/,/g, '');
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    function checkValidateData() {
        if ($('#selectDeliveryAddress').val() == '') {
            sweetAlert(""Thông báo"", ""Thông tin địa chỉ không được để trống"", ""error"");
            return false;
        }
        if ($('#ShippingEmail').val() == '') {
            sweetAlert(""Thông báo"", ""Thông tin email không được để trống"", ""error"");
            return false;
        }
        return true;
    }

    //function validatePhoneNumber(code) {
    //    var regex = /(84|0[3|5|7|8|9])+([0-9]{8})\b/;
    //    retu");
            WriteLiteral(@"rn regex.test(code);
    //}

    function RemoveToCart() {
        var products = [];
        $('input[name=cbid]:checked').each(function () {
            var _product = {};
            _product.cartId = $(this).parents(""tr"").find(""input[type=text].cartId"").val();
            _product.prodVariationId = $(this).parents(""tr"").find(""input[type=text].prodVariationId"").val();
            _product.size = $(this).parents(""tr"").find(""select.size"").val();
            _product.price = parseFloat($(this).parents(""tr"").find(""input[type=text].price"").val()) || 0;
            _product.quantity = parseInt($(this).parents(""tr"").find(""input[type=text].quantity"").val()) || 0;
            _product.totalMoneyItem = parseFloat($(this).parents(""tr"").find(""input[type=text].totalMoneyItem"").val()) || 0;
            products.push(_product);
        });
        if (products.length == 0) {
            swal('Lỗi', 'Bạn chưa chọn sản phẩm', 'error');
        }
        else {
            //Lấy danh sách sản phẩm và Ses");
            WriteLiteral(@"sion
            $.ajax({
                data: {
                    products: JSON.stringify(products)
                },
                contentType: 'application/json',
                dataType: 'json',
                url: '/Product/RemoveToCart',
                type: 'GET'
            });           
            swal(""Thành công"", ""Đã gỡ sản phẩm khỏi giỏ hàng"", ""success"");
            location.href = ""/Product/ShowDetailMyCart""
        }
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<GProject.WebApplication.Models.CartDTO>> Html { get; private set; }
    }
}
#pragma warning restore 1591
