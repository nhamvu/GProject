@model Tuple<GProject.Data.DomainClass.Product, List<GProject.Data.DomainClass.ProductVariation>,
GProject.Data.DomainClass.Brand, EvaluateCommentDTO, decimal, int, Customer>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using GProject.WebApplication.Models
@using GProject.Api.MyServices.Services;
@using GProject.Data.DomainClass;
@using GProject.WebApplication.Helpers;
@using GProject.Data.MyRepositories.IRepositories;
@{
    ViewBag.Title = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var ratingSum = Model.Item5;
    var ratingCount = Model.Item6;
    decimal rating = 0;
    if (ratingCount > 0)
    {
        rating = (ratingSum / ratingCount);
    }
    var totalRating = decimal.Parse(rating.ToString());

    var lstColor = await Commons.GetAll<Color>(String.Concat(Commons.mylocalhost, "Color/get-all-Color"));
    var lstSize = await Commons.GetAll<Size>(String.Concat(Commons.mylocalhost, "Size/get-all-Size"));
    var lstCustomer = await Commons.GetAll<Customer>(String.Concat(Commons.mylocalhost, "Customer/get-all-Customer"));
    var lstOrder = await Commons.GetAll<Order>(String.Concat(Commons.mylocalhost, "Order/get-all-Order"));
    var lstOrderDetail = await Commons.GetAll<OrderDetail>(String.Concat(Commons.mylocalhost,
    "Order/get-all-Order-detail"));
    var lstProducts = await Commons.GetAll<Product>(String.Concat(Commons.mylocalhost, "ProductMGR/get-all-Product-mgr"));
    var lstProductvariation = await Commons.GetAll<ProductVariation>(String.Concat(Commons.mylocalhost,
    "ProductVariation/get-all-ProductVariation"));

    var lstEvaluates = await Commons.GetAll<Evaluate>(String.Concat(Commons.mylocalhost, "Evaluate/get-all-Evaluate"));

    var isOrder = lstOrder
                .Join(lstOrderDetail, a => a.Id, b => b.OrderId, (a, b) => new { A = a, B = b })
                .Join(Model.Item2, ab => ab.B.ProductVariationId, c => c.Id, (ab, c) => new { A = ab.A, B = ab.B, C = c })
                .Where(k => k.C.ProductId == Model.Item1.Id && k.A.CustomerId == Model.Item7.Id).Select(c => c.A.CustomerId).FirstOrDefault();

    var isComment = lstEvaluates.FirstOrDefault(c => c.ProductId == Model.Item1.Id && c.CustomerId == Model.Item7.Id);
    IPromotionRepository _IPromotionRepository = new PromotionRepository();
    IPromotionDetailRepository _IPromotionDetalRepository = new PromotionDetailRepository();

    var promotiondata = (from p in _IPromotionRepository.GetAll()
                         join q in _IPromotionDetalRepository.GetAll() on p.Id equals q.PromotionId
                         where p.Status == GProject.Data.Enums.PromotionStatus.Happenning
                         select new
                         {
                             Promotion = p,
                             PromotionDetail = q
                         }).ToList();

    decimal price = Model.Item1.Price;
    var existProdPromotion = promotiondata.Where(c => c.PromotionDetail.ProductId == Model.Item1.Id).FirstOrDefault();
    if (existProdPromotion!= null)
    {
        price = existProdPromotion.PromotionDetail.CurrentPrice;
    }

    var user = GProject.WebApplication.Helpers.Commons.GetObjectFromJson<GProject.Data.DomainClass.Customer>(Context.Session, "userLogin");

    string nameByNow;
    int checkByNow = 0;
    if(user == null)
        nameByNow = "buyFormDataNotLogin";
    else
    {
        nameByNow = "buyFormData";
        checkByNow = 1;
    }
     var idproduct = ViewBag.productId;
}



<link rel="stylesheet" type="text/css" href="/UserContent/styles/categories_styles.css">
<link href="/css/product_details.css" rel="stylesheet">
<link href="/AdminContent/css/style.min.css" rel="stylesheet">


<div style="margin-top: 200px;">

@if (@ViewData["Mess"] != null)
{
    <p style="visibility: hidden;" id="error">@ViewData["Mess"]</p>
}
@if (@ViewData["message"] != null)
{
    <p style="visibility: hidden;" id="messerror">@ViewData["message"]</p>
}
@if (Model != null)
{
    <div id="motor-detail" class="container">
        <div class="row overview">
            <div class="col-12 col-lg-7 overview-left container-fliud">
                <div class="characteristics-image text-center">
                    @{
                        string img = Model.Item2.Where(c => c.ProductId == Model.Item1.Id).Select(c =>
                        c.Image).FirstOrDefault();
                    }
                    <img id="imgProd" style="width:650px;height:500px;" src="~/images/@img" alt="">
                </div>
                <div class="row">
                    <fieldset>
                       
                        <hr>
                        @{
                            foreach (var item in Model.Item2.Select(c => c.ColorId).Distinct().ToList())
                            {
                                string im = Model.Item2.Where(c => c.ColorId == item && c.ProductId == Model.Item1.Id).Select(c =>
                                c.Image).FirstOrDefault().NullToString();
                                <button type="button" onclick="changeImageProd('@im')">
                                    <img style="width:130px; height:160px;"
                             class="img-thumbnail" src="~/images/@im" alt="">
                                </button>
                            }
                        }
                    </fieldset>
                </div>
            </div>
            <div class="col-12 col-lg-5 overview-right">
                <form id="formdata" class="form-horizontal d-block">
                    <input id="cTotalMoney" name="cTotalMoney" hidden="hidden" />
                    <input id="cColor" name="cColor" hidden="hidden" />
                    <input id="cSize" name="cSize" hidden="hidden" />
                    <input id="cQuantity" name="cQuantity" hidden="hidden" />
                    <input id="cPrice" name="cPrice" hidden="hidden" />
                    <input id="cProductId" name="cProductId" value="@Model.Item1.Id.ToString()" hidden="hidden" />

                    <h2 class="d-none d-lg-block" style="color:Black">@Model.Item1.Name</h2>
                    
                    <div class="row">
                        <h3 class="d-none d-lg-block" style="color:Red">
                        Giá hiện tại: @string.Format("{0:0,0}", price) đ  
                        @if (existProdPromotion != null)
                        {
                            <del style="    color: gray; font-size: 18px;">@string.Format("{0:0,0}", existProdPromotion.PromotionDetail.InitialPrice) đ </del>
                        }                       
                        </h3>
                        
                    </div>
                    <div class="overview-detail mb-3" style="min-height: 0">
                        <div class="characteristics-desc">
                            <h4>Nhãn hiệu: @Model.Item3.Name</h4>
                            @{
                                string productType = "";
                                foreach (var item in Model.Item1.ProductType.Split(',').Distinct().ToList())
                                {
                                    switch (item)
                                    {
                                        case "0":
                                            productType += "Sản phẩm bình thường";
                                            break;
                                        case "1":
                                            productType += "Sản phẩm mới";
                                            break;
                                        case "2":
                                            productType += "Sản phẩm nổi bật";
                                            break;
                                        case "3":
                                            productType += "Sản phẩm được yêu thích";
                                            break;
                                        case "4":
                                            productType += "Sản phẩm khuyến mại";
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                            <h4>Loại sản phẩm: @productType</h4>
                            <h4>Lượt xem: @Model.Item1.ViewCount <i class="fa fa-eye"></i></h4>
                            
                            <h4>Số lượng còn lại: 
                                <span id="mQuantityInstock" value="">@Model.Item2.Sum(c => c.QuantityInStock)

                                </span>
                            </h4>
                            <h4 class="cl-class">
                                Màu sắc:
                                @{
                                    foreach (var item in Model.Item2.Select(c => c.ColorId).Distinct().ToList())
                                    {
                                        string im = Model.Item2.Where(c => c.ColorId == item && c.ProductId == Model.Item1.Id).Select(c => c.Image).FirstOrDefault().NullToString();
                                        
                                        var dataColor = lstColor.Where(x => x.Status == 1 && x.Id == item).FirstOrDefault();

                                        @if (dataColor != null )
                                        {
                                            <button type="button" value="@item" id="btnColor" onclick="changeImageProd('@im')" style="padding: 0 5px 0 5px;" href="/productdetail/@item/@Model.Item1.Id">
                                                @(dataColor.Name.NullToString())
                                            </button>
                                        }                                        
                                    }
                                }
                            </h4>
                            <h4 class="si-class">
                                Size:
                                @{
                                    foreach (var item in Model.Item2.Select(c => c.SizeId).Distinct().ToList())
                                    {
                                        var dataSize = lstSize.Where(x => x.Status == 1 && x.Id == item).FirstOrDefault();
                                        var dataProductVariationSize = lstProductvariation.Where(x => x.ProductId == idproduct && x.SizeId == item && x.QuantityInStock > 0).FirstOrDefault();
                                        @if (dataSize != null && dataProductVariationSize != null)
                                        {
                                            <button type="button" value="@item" id="btnSize" style="padding: 0 9px 0 9px;" >
                                                @(dataSize.Code.NullToString())
                                            </button>
                                        }
                                        
                                    }
                                }
                            </h4>

                            <div class="input-group plus-minus-input row">
                                <h4 class="col-md-4">Số lượng:</h4>
                                <div class="col-md-8 justify-content-center">
                                    <div class="row">
                                        <div class="input-group-button col-md-3 mt-2">
                                            <button type="button" class="btn-warning hollow circle" data-quantity="minus"
                                                data-field="quantity" style="margin-right:5px;">
                                                <i class="fa fa-minus" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                        <input class="input-group-field form-control col-md-5 quantity" type="number" id="quantity"
                                            name="quantity" value="0" style="width:100px;">
                                        <div class="input-group-button col-md-3 mt-2">
                                            <button type="button" class="btn-info hollow circle" data-quantity="plus"
                                                data-field="quantity" style="margin-left:5px;">
                                                <i class="fa fa-plus" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <hr>
                            <div class="row">
                                <h3 class="col-4">Thành tiền:</h3>
                                <h3 class="col-8" style="color:red;" id="totalMoney" name="totalMoney"> 0 đ</h3>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-3">Mô tả của bạn:</label>
                                <div class="col-sm-12">
                                    <textarea class="form-control" name="cDescription" id="cDescription" cols="50" rows="5"
                                        style="border:double 4px orange;"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <button type="button" id="btnAction" onclick="AddToCart()" class="btn btn-outline-danger col-md-5"><i
                                class="fa fa-shopping-cart" style="margin-right:10px; font-size: 17px;"></i>Thêm vào giỏ hàng</button>
                        <button type="button" id="btnAction" onclick="BuyNow()" class="btn btn-outline-danger col-md-5"><i
                                class="fa fa-calendar-o" style="margin-right:10px; font-size: 17px;"></i>Mua ngay</button>
                    </div>

                </form>

            </div>
        </div>
        <br>
        <p>@Model.Item1.Description.NullToString()</p>
        <!-- Danh sách sản phẩm liên quan-->

        <!-- Bình luận, đánh giá-->
        <div class="p-1 text-left" style="background-color: #CCCCCC; margin-top: 30px;">
            <h4><i class="fa fa-comments" style="margin:5px 10px;"></i>Đánh giá sản phẩm</h4>
            <h6><i class="fa fa-comments" style="margin:5px 10px;"></i>Có @lstEvaluates.Where(c => c.ProductId == Model.Item1.Id).Count() lượt đánh giá</h6>
        </div>
        <div>
            <span class="starFadeN" id="sRate1"></span>
            <span class="starFadeN" id="sRate2"></span>
            <span class="starFadeN" id="sRate3"></span>
            <span class="starFadeN" id="sRate4"></span>
            <span class="starFadeN" id="sRate5"></span>
        </div>
        @if (Model.Item4.Evaluates.Count() > 0)
        {
            @foreach (var item in Model.Item4.Evaluates)
            {
                var cusInfo = lstCustomer.Where(c => c.Id == item.CustomerId).FirstOrDefault();
                <hr />
                <div class="row">
                    <div class="col-md-1 d-flex justify-content-between">
                        @{
                            string imgCusAvata = cusInfo.Image.NullToString();
                            if (string.IsNullOrEmpty(imgCusAvata))
                            {
                                <img src="~/images/avatar.jpg" style="border-radius:50%; width:35px; border:2px solid black;">
                            }
                            else
                            {
                                <img src="~/images/@imgCusAvata" style="border-radius:50%; width:35px; border:2px solid black;">
                            }
                        }
                    </div>
                    <div class="col-md-11">
                        <i style="margin-right: 30px; vertical-align: top;">@cusInfo.Name.NullToString()</i>
                        <i style="margin-right: 30px; vertical-align: top;">@item.CreateDate</i>
                        @for (int i = 0; i < item.Rating; i++)
                        {
                            <span class="starGlowN"></span>
                        }
                        @for (int i = item.Rating.NullToInt(); i < 5; i++)
                        {
                            <span class="starFadeN"></span>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1"></div>
                    <div class="col-md-11">
                        @Html.Raw(item.Comment.Replace("\n", "<br />"))
                    </div>
                </div>
            }
        }
        <hr />
        @if (isOrder != null && isComment == null)
        {
            <partial id="commentBox" name="_CommentBox" />
        }

    </div>
}



<div class="modal" id="OrderModal" role="dialog">
    <div class="modal-dialog modal-md" style="text-align:left; background-color:white; max-width:900px">
        <div style="width:900px;">
            <form id="@nameByNow" order_id="@nameByNow" asp-controller="Order" asp-action="BuyNow" method="post"
                class="form-horizontal d-block">
                <div class="modal-content justify-content-center" style="border-width:1px;">
                    <div class="modal-header" style="width:800px;">
                        <h4 class="modal-title text-center">Thông tin đơn hàng</h4>
                    </div>
                    <div class="modal-body">
                        <input type="text" id="pTotalMoney" name="pTotalMoney" hidden="hidden" />
                        <input type="text" id="cShippingFee" name="cShippingFee" hidden="hidden" />
                        <input type="text" id="idDeliveryAddress" name="idDeliveryAddress" value="" hidden="hidden" />
                        <input type="text" id="cGiamGia" name="cGiamGia" value="" hidden="hidden" />

                        @{
                            if(user != null)
                            {
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label class="control-label col-sm-5">Địa chỉ đặt hàng:<span
                                                style="color: red">(*)</span></label>
                                            <div class="col-sm-12">
                                                <select id="selectDeliveryAddress" class="form-select">
                                                </select>
                                                <button style="margin-top: 5px;" class="btn btn-success "
                                                    onclick="OpenDeliveryAddress(); return false;" data-toggle="ajax-modal"
                                                    data-target="#showDataDeliveryAddress" data-url="/DeliveryAddress/Index">
                                                    Thêm
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <input type="text" id="Province" name="Province" value="" hidden="hidden" />
                                <input type="text" id="District" name="District" value="" hidden="hidden" />
                                <input type="text" id="Wards" name="Wards" value="" hidden="hidden" />
                            <div class="row"> 
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Họ và tên:<span style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingFullName" name="ShippingFullName" value="" placeholder="" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Số điện thoại:<span style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingPhone" onkeyup="checkphone()" name="ShippingPhone" value="" placeholder="+84" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            </div>
                            
                            <div class="row"> 
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Tỉnh/Thành phố:</label>
                                    <div class="col-sm-12">
                                        <select id="selectProvince" class="form-select">
                                            <option></option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Quận/Huyện:</label>
                                    <div class="col-sm-12">
                                        <select id="selectDistrict" class="form-select">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            </div>

                            <div class="row"> 
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Phường/Xã:</label>
                                    <div class="col-sm-12">
                                        <select id="selectWards" class="form-select">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Địa chỉ chi tiết:<span style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingAddress" name="ShippingAddress" value="" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            </div>                           
                            }
                        }
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5" style="width: 100%; padding: 0; margin: 0;">Email:<span
                                                style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        <input type="email" id="ShippingEmail" name="ShippingEmail" value=""
                                            placeholder="" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-12">Hình thức thanh toán:<span
                                                style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        @{
                                            int PaymentType = 0;
                                        }
                                        @Html.DropDownList("PaymentType",new[]
                                        {
                                        new SelectListItem{Text="Thanh toán khi nhận hàng", Value="0", Selected=
                                        (PaymentType== 0)},
                                        new SelectListItem{Text="Thanh toán khi đặt hàng", Value="1", Selected=
                                        (PaymentType== 1)},
                                        }, new { @name = "PaymentType",  @id = "PaymentType", @class="searchText form-control select"})
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-6">Mã giảm giá:<span
                                                style="color: red">(*)</span></label>
                                    <div class="col-sm-12">
                                        <select id="selectVoucher" name="selectVoucher" class="form-select">
                                            <option value=""></option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5">Nhập mã giảm giá:<span
                                                style="color: red">(*)</span></label>
                                    <div class="row col-md-12">
                                        <div class="col-sm-8" >
                                            <input type="text" style="width: 100%; padding: 0; margin: 0;" id="DiscountCode" name="DiscountCode" value=""
                                                placeholder="" class="form-control col-12" />
                                        </div>
                                        <div class="col-sm-4">
                                            <a class="btn btn-outline-info" onclick="CheckDiscountCode()"><i
                                                    class="fa-solid fa-check fa-lg"></i></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-3">Mô tả của bạn:</label>
                                <div class="col-sm-12">
                                    <textarea class="form-control" name="cDescription" id="cDescription" cols="50"
                                        rows="5" style="border:double 4px orange;"></textarea>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-9">
                                    <label class="control-label col-md-12">Phí ship:</label>
                                </div>
                                <div class="col-sm-3">
                                    <p><label id="txtPhiShip">0</label><label style="margin-left: 5px;">đ</label>
                                    </p>
                                </div>
                            </div>
                            <div class="form-group row" style="margin-top: -20px">
                                <div class="col-sm-9">
                                    <label class="control-label col-md-12">Giảm giá:</label>
                                </div>
                                <div class="col-sm-3">
                                    <p><label>- </label> <label id="txtGiamGia">0</label><label
                                            style="margin-left: 5px;">đ</label></p>
                                </div>
                            </div>
                            <div class="form-group row" style="margin-top: -20px">
                                <div class="col-sm-9">
                                    <label class="control-label col-md-12">Tổng tiền sản phẩm:</label>
                                </div>
                                <div class="col-sm-3">
                                    <p><label id="txtTotalProduct"></label>
                                    <label style="margin-left: 5px;">đ</label></p>
                                </div>
                            </div>
                            <div class="form-group row" style="margin-top: -20px">
                                <div class="col-sm-9">
                                    <h5><label class="control-label col-md-12">
                                        Tổng tiền thanh toán:
                                    </label></h5>
                                </div>
                                <div class="col-sm-3">
                                    <h5><label style="color:red;" id="textTotalMoney"></label><label
                                            style="margin-left: 5px;color:red;">đ</label></h5>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer" style="margin-top: -20px">
                        <button type="submit" class="btn btn-sm btn-success" id="cpCopyBtn"><i class="fa fa-check"
                                aria-hidden="true"></i> Đặt hàng</button>
                        <button type="button" class="btn btn-sm btn-default btn-dimiss-modal" id="btnCloseModal">
                            <i class="fa fa-times"></i> Đóng
                        </button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        LoadProvince();
        LoadDistrict();
        var id = $(this).attr("order_id")
            if (id == "buyFormData") {
                DataAddressCustomer();
            }
        LoadWard();
        

        document.querySelector('#@nameByNow').addEventListener('submit', function (e) {
            var form = this;
            e.preventDefault();
            var id = $(this).attr("order_id")
            if(id == "buyFormData")
            {
                if ($('#selectDeliveryAddress').val() == '') {
                    sweetAlert("Thông báo", "Thông tin địa chỉ không được để trống", "error");
                }
                else{
                    swal("Bạn chắc chắn muốn đặt đơn hàng này?", {
                    title: 'Bạn chắc chắn muốn đặt đơn hàng này?',
                    icon: 'info',
                    buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        form.submit();
                    } else {
                        swal("Đã hủy", "Bạn đã không lưu những thay đổi này!", "error");
                    }
                });
                }
            }
            else if(id == "buyFormDataNotLogin"){

                $('#Province').val( $("#selectProvince :selected").text() );
                $('#District').val( $("#selectDistrict :selected").text() );
                $('#Wards').val( $("#selectWards :selected").text() );

                if(checkOrderData())
                {
                    swal("Bạn chắc chắn muốn đặt đơn hàng này?", {
                    title: 'Bạn chắc chắn muốn đặt đơn hàng này?',
                    icon: 'info',
                    buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
                }).then(function (isConfirm) {
                    if (isConfirm) {
                        form.submit();
                    } else {
                        swal("Đã hủy", "Bạn đã không lưu những thay đổi này!", "error");
                    }
                });
                }
                
            }            
            
        });


        $("#selectDeliveryAddress").change(function () {
            let _id = $("#selectDeliveryAddress").val();
            $.ajax({
                url: "/Product/GetDataDeliveryAddress?id=" + _id,
                type: "GET",
                success: function (result) {
                    if (result != null) {
                        ShippingFee(result.districtID, result.wardCode)
                        $("#idDeliveryAddress").val(result.id)
                    }
                    else {
                        var total = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/\./g, '')) - parseFloat(document.querySelector('#txtGiamGia').innerText.replace(/\./g, ''))
                        if (total < 0) {
                            total = 0;
                        }
                        swal("Thông báo!", "Bạn không được để trống thông tin địa chỉ!", "error");
                        $("#txtPhiShip").text(commasThousands(0))
                        $('#textTotalMoney').text(commasThousands(total));
                        $('#pTotalMoney').val(total);
                        $('#cShippingFee').val(0);
                    }
                }
            })
        });

        $("#selectWards").change(function () {
            let district = $("#selectDistrict").val();
            let ward = $("#selectWards").val();
            ShippingFee(district, ward)
        })

        $('input.quantity').keyup(function () {
            let regex = /^[0-9]+$/;
            if (!regex.test($(this).val()))
                $(this).val($(this).val().replace(/[^0-9.]/g, ""));
        });


        $("#selectVoucher").change(function () {
            $("#DiscountCode").val('')
            let _id = $("#selectVoucher").val();
            $.ajax({
                url: "/Product/GetVoucher?id=" + _id,
                type: "GET",
                success: function (result) {
                    let totalProduct = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/\./g, ''));
                    let discount = 0;
                    var total = 0;
                    if (result != null) {
                        if (result.discountForm == "%") {
                            discount = Math.round(TinhPhanTram(totalProduct, result.discountRate))
                            if (discount > result.maximumDiscount)
                                discount = result.maximumDiscount
                        }
                        else {
                            discount = result.discountRate
                        }
                        $("#txtGiamGia").text(commasThousands(discount))
                        total = totalProduct - discount + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/\./g, ''));
                    
                         swal("Áp dụng thành công mã giảm giá: " + result.name, "Bạn được giảm: " + commasThousands(discount) + " đ", "success");
                    }
                    else {
                        swal("Thông báo!", "Mã giảm giá không được áp dụng!", "error");
                        $("#txtGiamGia").text(0)
                        $("#txtDiscountForm").text("đ")
                        total = totalProduct + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/\./g, ''));
                    }

                    if (total < 0) {
                        total = 0;
                    }

                
                    $('#textTotalMoney').text(commasThousands(total));
                    $('#pTotalMoney').val(total);
                    $('#cGiamGia').val(discount);
                }
            })
        });



        $('[data-quantity="plus"]').click(function (e) {
            e.preventDefault();
            fieldName = $(this).attr('data-field');
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            if (!isNaN(currentVal)) {
                $('input[name=' + fieldName + ']').val(currentVal + 1);
            } else {
                $('input[name=' + fieldName + ']').val(0);
            }
            sumTotal();
        });
        $('[data-quantity="minus"]').click(function (e) {
            e.preventDefault();
            fieldName = $(this).attr('data-field');
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            if (!isNaN(currentVal) && currentVal > 0) {
                $('input[name=' + fieldName + ']').val(currentVal - 1);
            } else {
                $('input[name=' + fieldName + ']').val(0);
            }
            sumTotal();
        });

        $(".quantity").change(function(){
            sumTotal();
        });

        $('.cl-class > button').click(function () {
            $('.cl-class > button').css('background-color', 'white');
            $(this).css('background-color', '#00CCCC');
            $('#cColor').val($(this).val());
            getQuantityInstock();
        });

        $('.si-class > button').click(function () {
            $('.si-class > button').css('background-color', 'white');
            $(this).css('background-color', '#00CCCC');
            $('#cSize').val($(this).val());
            getQuantityInstock();
        });

        var er = document.getElementById('error')
        if (er != null) {
            if ($('#error').text() == 'Failed')
                swal("Không thành công", "Thao tác thất bại, vui lòng thực hiện lại", "error");
            else
                swal("Thành công", "Thao tác thành công", "success");
        }

        var messerror = document.getElementById('messerror')
        if (messerror != null) {
            swal("Không thành công", messerror, "error");
        }
    });

    function checkphone(){
        let regex = /^[0-9]+$/;
        if (!regex.test($("#ShippingPhone").val()))
            $("#ShippingPhone").val($("#ShippingPhone").val().replace(/[^0-9.]/g, ""));
    }

    function CheckDiscountCode() {
        $("#selectVoucher").val(0)

        let _discountCode = $("#DiscountCode").val();
        $.ajax({
            url: "/Product/GetVoucher?discountCode=" + _discountCode,
            type: "GET",
            success: function (result) {
                let totalProduct = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/\./g, ''));
                let discount = 0;
                var total = 0;
                if (result != null) {
                    if (result.discountForm == "%") {
                        discount = Math.round(TinhPhanTram(totalProduct, result.discountRate))
                        if (discount > result.maximumDiscount)
                            discount = result.maximumDiscount
                    }
                    else {
                        discount = result.discountRate
                    }
                    $("#txtGiamGia").text(commasThousands(discount))
                    total = totalProduct - discount + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/\./g, ''));
                
                    swal("Áp dụng thành công mã giảm giá: " + _discountCode, "Bạn được giảm: " + commasThousands(discount) + " đ ", "success");
                }
                else {
                    swal("Thông báo!", "Mã giảm giá không được áp dụng!", "error");
                    $("#txtGiamGia").text(0)
                    $("#txtDiscountForm").text("đ")
                    total = totalProduct + parseFloat(document.querySelector('#txtPhiShip').innerText.replace(/\./g, ''));
                }

                if (total < 0) {
                    total = 0;
                }

                
                $('#textTotalMoney').text(commasThousands(total));
                $('#pTotalMoney').val(total);
                $('#cGiamGia').val(discount);
            }
        })
    }

    function TinhPhanTram(tongtien, giamgia) {
        let thanhtien = tongtien - (tongtien * ((100 - giamgia) / 100))
        return thanhtien
    }

    function ConvertDate(time) {
        var date = new Date(time);
        var dateConvert = (((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate())) + '/' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1))) + '/' + date.getFullYear())
        return dateConvert
    }

    function OpenDeliveryAddress() {
        $('#OrderModal').modal('hide');
    }
    e.preventDefault();
    

    function ShippingFee(district_id, ward_code) {
        $.ajax({
            url: "/Product/ShippingFee?district_id=" + district_id + "&ward_code=" + ward_code,
            type: "GET",
            success: function (result) {
                var total = 0;
                var total = parseFloat(document.querySelector('#txtTotalProduct').innerText.replace(/\./g, '')) + result - parseFloat(document.querySelector('#txtGiamGia').innerText.replace(/\./g, ''));
                if (total < 0) {
                    total = 0;
                }
                $("#txtPhiShip").text(commasThousands(result))
                $('#textTotalMoney').text(commasThousands(total));
                $('#pTotalMoney').val(total);
                $('#cShippingFee').val(result);
            }
        })
    }

    function GetDataVoucherById(totalMoneyOrder) {
        $.ajax({
            url: "/Product/GetVoucher?totalMoneyOrder=" + totalMoneyOrder,
            type: "GET",
            success: function (result) {
                var renderData = "<option></option>";
                $.each(result, function (value) {
                    var date = result[value].expirationDate;
                    renderData += '<option value="' + result[value].id + '">' + result[value].name + '</option>';
                    renderData += '<option disabled style = "font-style:italic" > (Đơn Tối Thiểu ' + commasThousands(result[value].minimumOrder) + 'đ)' + '</option>'

                    if (result[value].discountForm == "%")
                        renderData += '<option disabled style = "font-style:italic" > (Giảm tối đa ' + commasThousands(result[value].maximumDiscount) + 'đ)' + '</option>'

                    renderData += '<option disabled style = "font-style:italic" > (HSD: ' + ConvertDate(date) + ')' + ' </option>'
                    renderData += '<option disabled style="font-style:italic"></option>'
                });
                $("#selectVoucher").html(renderData)
            }
        })
    }

    function GetDataVoucher(totalMoneyOrder) {
        $.ajax({
            url: "/Product/GetVoucher?totalMoneyOrder=" + totalMoneyOrder,
            type: "GET",
            success: function (result) {
                var renderData = "<option></option>";
                $.each(result, function (value) {

                    var date = result[value].expirationDate;
                    renderData += '<option value="' + result[value].id + '">' + result[value].name + '</option>';
                    renderData += '<option disabled style = "font-style:italic" > (Đơn Tối Thiểu ' + commasThousands(result[value].minimumOrder) + 'đ)' + '</option>'

                    if (result[value].discountForm == "%")
                        renderData += '<option disabled style = "font-style:italic" > (Giảm tối đa ' + commasThousands(result[value].maximumDiscount) + 'đ)' + '</option>'

                    renderData += '<option disabled style = "font-style:italic" > (HSD: ' + ConvertDate(date) + ')' + ' </option>'
                    renderData += '<option disabled style="font-style:italic"></option>'
                });
                $("#selectVoucher").html(renderData)
            }
        })
    }

    function getQuantityInstock() {
        $.ajax({
            data: {
                cColorId: $('#cColor').val(),
                cSizeId: $('#cSize').val(),
                cProductId: $('#cProductId').val()
            },
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/GetQuantityInstock',
            type: 'GET',
            success: function (result) {
                $('#mQuantityInstock').text(result);
            }
        });
    }

    function sumTotal() {
        let mQuantity = parseInt($('#quantity').val().replace(/\./g, '') || 0) || 0;
        let mPrice = parseFloat(@price) || 0;
        $('#cQuantity').val(mQuantity);
        $('#cPrice').val(mPrice);
        $('#cTotalMoney').val(mQuantity * mPrice);
        $('#pTotalMoney').val(mQuantity * mPrice);
        $('#totalMoney').text(commasThousands(mQuantity * mPrice) + ' đ');
        $('#txtTotalProduct').text(commasThousands($('#pTotalMoney').val()));
    }

    function commasThousands(nStr) {
        nStr += '';
        nStr = nStr.replace(/\./g, '');
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + '.' + '$2');
        }
        return x1 + x2;
    }

    function checkValidateData() {
        if ($('#cQuantity').val() == '' || $('#cQuantity').val() == '0') {
            sweetAlert("Thông báo", "Thông tin số lượng sản phẩm không được để trống", "error");
            return false;
        }
        if (parseInt($('#cQuantity').val() || 0) > parseInt($('#mQuantityInstock').text() || 0)) {
            sweetAlert("Thông báo", "Thông tin số lượng không được lớn hơn số lượng còn lại của sản phẩm", "error");
            return false;
        }
        if ($('#cSize').val() == '') {
            sweetAlert("", "Vui lòng chọn kích cỡ", "error");
            return false;
        }
        if ($('#cColor').val() == '') {
            sweetAlert("", "Vui lòng chọn màu sắc", "error");
            return false;
        }

        return true;
    }

    function validatePhoneNumber(code) {
        var regex = /(84|0[3|5|7|8|9])+([0-9]{8})\b/;
        return regex.test(code);
    }
    function checkOrderData() {
        if ($('#ShippingFullName').val() == '') {
            sweetAlert("Thông báo", "Thông tin Họ tên người mua hàng không được để trống", "error");
            return false;
        }
        if ($('#ShippingPhone').val() == '') {
            sweetAlert("", "Thông tin Số điện thoại không được để trống", "error");
            return false;
        }
        if (!validatePhoneNumber($('#ShippingPhone').val())) {
            sweetAlert("Thông báo", "Thông tin Số điện thoại không đúng định dạng", "error");
            return false;
        }
        if ($('#selectProvince').val() == '') {
            sweetAlert("", "Thông tin thành phố không được để trống", "error");
            return false;
        }
        if ($('#selectDistrict').val() == '') {
            sweetAlert("", "Thông tin huyện không được để trống", "error");
            return false;
        }
        if ($('#selectWards').val() == '') {
            sweetAlert("", "Thông tin phường xã không được để trống", "error");
            return false;
        }
        if ($('#ShippingEmail').val() == '') {
            sweetAlert("", "Thông tin Email không được để trống", "error");
            return false;
        }
        if ($('#PaymentType').val() == '') {
            sweetAlert("", "Thông tin thanh toán không được để trống", "error");
            return false;
        }
        if ($('#ShippingAddress').val() == '') {
            sweetAlert("", "Thông tin địa chỉ không được để trống", "error");
            return false;
        }
        return true;
    }


    function changeImageProd(strImage) {
        $('#imgProd').attr('src', '/images/' + strImage);
        getQuantityInstock();
    }
    function changeLikeCount() {
        $.ajax({
            data: { cProductId: $('#cProductId').val() },
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/ReleaseHeart',
            type: 'GET',
            success: function (response) {
                location.reload();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                location.reload();
            }
        });
    }

    function AddToCart() {
        if (checkValidateData()) {
            swal("Bạn muốn thêm nhanh vào giỏ hàng của mình?", {
                title: 'Bạn muốn thêm nhanh vào giỏ hàng của mình?',
                icon: 'info',
                buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var _total_money = $('#cTotalMoney').val();
                    var _color = $('#cColor').val();
                    var _size = $('#cSize').val();
                    var _quantity = $('#cQuantity').val();
                    var _price = $('#cPrice').val();
                    var _product_id = $('#cProductId').val();
                    var _description = $('#cDescription').val();
                    document.location = "/Product/AddToCart?cTotalMoney=" + _total_money + "&cColor=" + _color + "&cSize=" + _size + "&cQuantity=" + _quantity + "&cPrice=" + _price
                        + "&cProductId=" + _product_id + "&cDescription=" + _description;
                } else {
                    swal("Đã hủy", "Bạn đã không lưu những thay đổi này!", "error");
                }
            });
        }
    }

    function BuyNow() {
        if (checkValidateData()) {
            var products = [];
            var _product = {};
            _product.color = parseInt($('#cColor').val());
            _product.size = parseInt($('#cSize').val());
            _product.price = parseFloat($('#cPrice').val());
            _product.quantity = parseInt($('#cQuantity').val());
            _product.totalMoneyItem = parseFloat($('#cTotalMoney').val());
            _product.productId = $('#cProductId').val();
            products.push(_product);

            let total = $('#cTotalMoney').val();

            if(@checkByNow == 1)
            {
                DataAddressCustomer();  
            }
            
            GetDataVoucher(total);

            $('#textTotalMoney').text(commasThousands(total));
            $('#pTotalMoney').val(total);

            $.ajax({
                data: {
                    products: JSON.stringify(products)
                },
                contentType: 'application/json',
                dataType: 'json',
                url: '/Product/Order',
                type: 'GET'
            });

            //Lấy thông tin người dùng
            $.ajax({
                contentType: 'application/json',
                dataType: 'json',
                url: '/Product/GetCustomerInfo',
                type: 'GET',
                success: function (result) {
                    $("#ShippingFullName").val(result.name);
                    $("#ShippingPhone").val(result.phoneNumber);
                    $("#ShippingEmail").val(result.email);
                }
            });
            $('#OrderModal').modal('show');
        }
    }

    $('#btnCloseModal').click(function () {
        $('#OrderModal').modal('hide');
    });


    function SCRate() {
        for (var i = 1; i <= @totalRating; i++) {
            $("#sRate" + i).attr('class', 'starGlowN');
        }
    }

    $(function () {
        SCRate();
    });
</script>