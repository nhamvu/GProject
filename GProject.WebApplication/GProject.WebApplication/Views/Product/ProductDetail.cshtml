@model Tuple<GProject.Data.DomainClass.Product, List<GProject.Data.DomainClass.ProductVariation>, GProject.Data.DomainClass.Brand, EvaluateCommentDTO, decimal, int, Customer>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using GProject.WebApplication.Models
@using GProject.Api.MyServices.Services;
@using GProject.Data.DomainClass;
@using GProject.WebApplication.Helpers;
@{
    ViewBag.Title = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var ratingSum = Model.Item5;
    var ratingCount = Model.Item6;
    decimal rating = 0;
    if (ratingCount > 0)
    {
        rating = (ratingSum / ratingCount);
    }
    var totalRating = decimal.Parse(rating.ToString());

    var lstColor = await Commons.GetAll<Color>(String.Concat(Commons.mylocalhost, "Color/get-all-Color"));
    var lstSize = await Commons.GetAll<Size>(String.Concat(Commons.mylocalhost, "Size/get-all-Size"));
    var lstCustomer = await Commons.GetAll<Customer>(String.Concat(Commons.mylocalhost, "Customer/get-all-Customer"));
    var lstOrder = await Commons.GetAll<Order>(String.Concat(Commons.mylocalhost, "Order/get-all-Order"));
    var lstOrderDetail = await Commons.GetAll<OrderDetail>(String.Concat(Commons.mylocalhost, "Order/get-all-Order-detail"));
    var lstProducts = await Commons.GetAll<Product>(String.Concat(Commons.mylocalhost, "ProductMGR/get-all-Product-mgr"));
    var lstProductvariation = await Commons.GetAll<ProductVariation>(String.Concat(Commons.mylocalhost, "ProductVariation/get-all-ProductVariation"));

    var isOrder = lstOrder
                .Join(lstOrderDetail, a => a.Id, b => b.OrderId, (a, b) => new { A = a, B = b })
                .Join(Model.Item2, ab => ab.B.ProductVariationId, c => c.Id, (ab, c) => new { A = ab.A, B = ab.B, C = c })
                .Where(k => k.C.ProductId == Model.Item1.Id && k.A.CustomerId == Model.Item7.Id).Select(c => c.A.CustomerId).FirstOrDefault();
}

<style>

    .plus-minus-input {
        -webkit-align-items: center;
        -ms-flex-align: center;
        align-items: center;
    }

        .plus-minus-input .input-group-field {
            text-align: center;
            margin-left: 0.5rem;
            margin-right: 0.5rem;
            padding: 1rem;
        }

            .plus-minus-input .input-group-field::-webkit-inner-spin-button,
            .plus-minus-input .input-group-field ::-webkit-outer-spin-button {
                -webkit-appearance: none;
                appearance: none;
            }

        .plus-minus-input .input-group-button .circle {
            border-radius: 50%;
            padding: 0.25em 0.8em;
        }

    #btnAction {
        display: inline-block;
        font-size: 20px;
        padding: 10px 10px;
        cursor: pointer;
        text-align: center;
        text-decoration: none;
        outline: none;
        color: black;
        background-color: white;
        border: none;
        border-radius: 15px;
        border: 2px solid Red;
        box-shadow: 0 9px #999;
        margin: 10px 20px;
    }

        #btnAction:hover {
            background-color: Red; /* Green */
            color: white;
        }

        #btnAction:active {
            background-color: #3e8e41;
            box-shadow: 0 5px #666;
            transform: translateY(4px);
        }

    .image__img {
        display: block;
        width: 100%;
        height: 280px;
    }

    .image__overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.6);
        color: #ffffff;
        font-family: 'Quicksand', sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.25s;
    }

    .image__overlay--blur {
        backdrop-filter: blur(5px);
    }

    .image__overlay > * {
        transform: translateY(20px);
        transition: transform 0.25s;
    }

    .image__overlay:hover {
        opacity: 1;
    }

        .image__overlay:hover > * {
            transform: translateY(0);
        }

    .image__title {
        font-size: 2em;
        font-weight: bold;
    }

    .image__description {
        font-size: 1.25em;
        margin-top: 0.25em;
    }

    .starFade {
        background-image: url("/images/sao_trang.png");
        min-width: 30px;
        min-height: 30px;
        display: inline-block;
        cursor: pointer;
    }

    .starFadeN {
        background-image: url("/images/sao_trang.png");
        min-width: 30px;
        min-height: 30px;
        display: inline-block;
    }

    .starGlow {
        background-image: url("/images/sao_vang.jpg");
        min-width: 30px;
        min-height: 30px;
        display: inline-block;
        cursor: pointer;
    }

    .starGlowN {
        background-image: url("/images/sao_vang.jpg");
        width: 30px;
        height: 30px;
        display: inline-block;
    }
</style>

@if (@ViewData["Mess"] != null)
{
    <p style="visibility: hidden;" id="error">@ViewData["Mess"]</p>
}
@if (Model != null)
{
    <div id="motor-detail" class="container">
        <div class="row d-none d-lg-block motor-breadscrumb">
            <a class="breadscrumb-parent" href="/product/index">Trang chủ</a>
            <span class="breadscrumb-arrow">❯</span>
            <a class="breadscrumb-parent" href="/product/index">Danh sách sản phẩm</a>
            <span class="breadscrumb-arrow">❯</span>
            <a class="breadscrumb-parent" href="/product/index">Sản phẩm</a>
            <span class="breadscrumb-arrow">❯</span>
            <a class="breadscrumb-current">@Model.Item1.Name</a>
        </div>
        <div class="row overview">
            <div class="col-12 col-lg-7 overview-left container-fliud">
                <div class="characteristics-image">
                    @{
                        string img = Model.Item2.Where(c => c.ProductId == Model.Item1.Id).Select(c => c.Image).FirstOrDefault();
                    }
                    <img id="imgProd" style="width:650px;height:500px;" src="~/images/@img" alt="">
                </div>
                <div class="row">
                    <fieldset>
                        <Legend><strong>Màu sắc khác của sản phẩm này</strong></Legend>
                        <hr>
                        @{
                            foreach (var item in Model.Item2.Select(c => c.ColorId).Distinct().ToList())
                            {
                                string im = Model.Item2.Where(c => c.ColorId == item && c.ProductId == Model.Item1.Id).Select(c => c.Image).FirstOrDefault().NullToString();
                                <button type="button" onclick="changeImageProd('@im')"><img style="width:250px; height:100px;" class="img-thumbnail" src="~/images/@im" alt=""></button>
                            }
                        }
                    </fieldset>
                </div>
            </div>
            <div class="col-12 col-lg-5 overview-right">
                <form id="formdata" class="form-horizontal d-block">
                    <input id="cTotalMoney" name="cTotalMoney" hidden="hidden" />
                    <input id="cColor" name="cColor" hidden="hidden" />
                    <input id="cSize" name="cSize" hidden="hidden" />
                    <input id="cQuantity" name="cQuantity" hidden="hidden" />
                    <input id="cPrice" name="cPrice" hidden="hidden" />
                    <input id="cProductId" name="cProductId" value="@Model.Item1.Id.ToString()" hidden="hidden" />

                    <h1 class="d-none d-lg-block" style="color:Black"><strong>@Model.Item1.Name</strong></h1>
                    <h1 class="d-none d-lg-block" style="color:Red">Giá hiện tại: <strong>@string.Format("{0:0,0}", Model.Item1.Price) VNĐ</strong> </h1>
                    <div class="overview-detail mb-3" style="min-height: 0">
                        <div class="characteristics-desc">
                            <h3><strong>Nhãn hiệu:</strong> @Model.Item3.Name</h3>
                            @{
                                string productType = "";
                                foreach (var item in Model.Item1.ProductType.Split(',').Distinct().ToList())
                                {
                                    switch (item)
                                    {
                                        case "0":
                                            productType += "Sản phẩm bình thường";
                                            break;
                                        case "1":
                                            productType += ", Sản phẩm mới";
                                            break;
                                        case "2":
                                            productType += ", Sản phẩm nổi bật";
                                            break;
                                        case "3":
                                            productType += ", Sản phẩm được yêu thích";
                                            break;
                                        case "4":
                                            productType += ", Sản phẩm khuyến mại";
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            }
                            <h3><strong>Loại sản phẩm:</strong> @productType</h3>
                            <h3><strong>Lượt xem:</strong> @Model.Item1.ViewCount <i class="fa fa-eye"></i> người đã xem sản phẩm này</h3>
                            <div class="row">
                                <div class="col-md-10">
                                    <h3><strong>Lượt thích:</strong> @Model.Item1.LikeCount <i class="fa fa-heart"></i> người đã thích sản phẩm này</h3>
                                </div>
                                <div class="col-md-2">
                                    <button type="button" onclick="changeLikeCount()"><img style="width:50px;height:50px;" src="~/images/tymImg.jpg" /></button>
                                </div>
                            </div>
                            <h3><strong>Số lượng còn lại:</strong><span id="mQuantityInstock" value="">@Model.Item2.Sum(c => c.QuantityInStock)</span>  sản phẩm có sẵn</h3>
                            <h3 class="cl-class">
                                <strong>Màu sắc:</strong>
                                @{
                                    foreach (var item in Model.Item2.Select(c => c.ColorId).Distinct().ToList())
                                    {
                                        string im = Model.Item2.Where(c => c.ColorId == item && c.ProductId == Model.Item1.Id).Select(c => c.Image).FirstOrDefault().NullToString();
                                        <button type="button" value="@item" id="btnColor" onclick="changeImageProd('@im')" style="width: 60px; height:40px;" href="/productdetail/@item/@Model.Item1.Id">@(lstColor.FirstOrDefault(c => c.Id == item).Name.NullToString())</button>
                                    }
                                }
                            </h3>
                            <h3 class="si-class">
                                <strong>Size:</strong>
                                @{
                                    foreach (var item in Model.Item2.Select(c => c.SizeId).Distinct().ToList())
                                    {
                                        <button type="button" value="@item" id="btnSize" style="width: 60px; height:40px;">@(lstSize.FirstOrDefault(c => c.Id == item).Code.NullToString())</button>
                                    }
                                }
                            </h3>

                            <div class="input-group plus-minus-input row">
                                <h3 class="col-md-4"><strong>Số lượng:</strong></h3>
                                <div class="col-md-8 justify-content-center">
                                    <div class="row">
                                        <div class="input-group-button col-md-3 mt-2">
                                            <button type="button" class="btn-warning hollow circle" data-quantity="minus" data-field="quantity" style="margin-right:5px;">
                                                <i class="fa fa-minus" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                        <input class="input-group-field form-control col-md-5" type="number" id="quantity" name="quantity" value="0" style="width:50px;">
                                        <div class="input-group-button col-md-3 mt-2">
                                            <button type="button" class="btn-info hollow circle" data-quantity="plus" data-field="quantity" style="margin-left:5px;">
                                                <i class="fa fa-plus" aria-hidden="true"></i>
                                            </button>
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <hr>
                            <h3><strong>Thành tiền:</strong></h3><h1><strong style="color:red;" id="totalMoney" name="totalMoney"> 0 VND</strong></h1>
                            <div class="form-group">
                                <label class="control-label col-sm-3"><strong>Mô tả của bạn:</strong></label>
                                <div class="col-sm-12">
                                    <textarea class="form-control" name="cDescription" id="cDescription" cols="50" rows="5" style="border:double 4px orange;"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <button type="button" id="btnAction" onclick="AddToCart()" class="btn btn-primary col-md-5"><i class="fa fa-shopping-cart" style="margin-right:10px;"></i>Thêm vào giỏ hàng</button>
                        <button type="button" id="btnAction" onclick="BuyNow()" class="btn btn-primary col-md-5"><i class="fa fa-calendar-check-o" style="margin-right:10px;"></i>Mua ngay</button>
                    </div>

                </form>

            </div>
        </div>
        <h2><strong>Mô tả chi tiết:</strong> </h2>
        <br>
        <p>@Model.Item1.Description.NullToString()</p>
        <!-- Danh sách sản phẩm liên quan-->
        <div>
            @{
                var lstSimilarProduct = lstProducts.Where(c => c.ProductType.Contains(Model.Item1.ProductType) && c.Id != Model.Item1.Id).ToList();
            }
            @if (lstSimilarProduct.Count() > 0)
            {
                <div class="p-1 text-left" style="background-color: #CCCCCC;">
                    <h2><strong><i class="fa fa-bars" style="margin:5px 10px;"></i>SẢN PHẨM LIÊN QUAN</strong></h2>
                </div>
                <div class="product-grid" style="height:450px;">
                    @foreach (var x in lstSimilarProduct)
                    {
                        <div class="product-item men">
                            <div class="product discount product_filter">
                                <div class="image">

                                    @{
                                        string image = lstProductvariation.Where(c => c.ProductId == x.Id && !string.IsNullOrEmpty(c.Image)).Select(c => c.Image).FirstOrDefault().NullToString();
                                    }
                                    <img class="image__img" src="~/images/@image" alt="Bricks">
                                    <div class="image__overlay image__overlay--primary">
                                        <p class="image__description">Mua ngay</p>
                                        <a class="btn btn-primary" href="/productdetail/@x.Id" style="border-radius:10px;"><i class="fa fa-shopping-cart" style="margin-right:10px;"></i>Thêm vào giỏ hàng</a>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h4 class="card-title text-center"><strong style="color:red;"> @string.Format("{0:0,0} VNĐ", Convert.ToDouble(x.Price.ToString()))</strong></h4>
                                    <div>
                                        <h4 class="card-title text-center"><strong>@x.Name</strong></h4>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
        <!-- Bình luận, đánh giá-->
        <div class="p-1 text-left" style="background-color: #CCCCCC;">
            <h2><strong><i class="fa fa-comments" style="margin:5px 10px;"></i>DANH SÁCH BÌNH LUẬN,ĐÁNH GIÁ</strong></h2>
        </div>
        <div>
            <span class="starFadeN" id="sRate1"></span>
            <span class="starFadeN" id="sRate2"></span>
            <span class="starFadeN" id="sRate3"></span>
            <span class="starFadeN" id="sRate4"></span>
            <span class="starFadeN" id="sRate5"></span>
        </div>
        @if (Model.Item4.Evaluates.Count() > 0)
        {
            @foreach (var item in Model.Item4.Evaluates)
            {
                var cusInfo = lstCustomer.Where(c => c.Id == item.CustomerId).FirstOrDefault();
                <hr />
                <div class="row">
                    <div class="col-md-1 d-flex justify-content-between">
                        @{
                            string imgCusAvata = cusInfo.Image.NullToString();
                            if (string.IsNullOrEmpty(imgCusAvata))
                            {
                                <img src="~/images/avatar.jpg" style="border-radius:50%; width:35px; border:2px solid black;">
                            }
                            else
                            {
                                <img src="~/images/@imgCusAvata" style="border-radius:50%; width:35px; border:2px solid black;">
                            }
                        }
                    </div>
                    <div class="col-md-11">
                        <i style="margin-right: 30px; vertical-align: top;"><strong>@cusInfo.Name.NullToString()</strong></i>
                        <i style="margin-right: 30px; vertical-align: top;">@item.CreateDate</i>
                        @for (int i = 0; i < item.Rating; i++)
                        {
                            <span class="starGlowN"></span>
                        }
                        @for (int i = item.Rating.NullToInt(); i < 5; i++)
                        {
                            <span class="starFadeN"></span>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1"></div>
                    <div class="col-md-11">
                        @Html.Raw(item.Comment.Replace("\n", "<br />"))
                    </div>
                </div>
            }
        }
        <hr />
        @if (isOrder != null)
        {
            <partial id="commentBox" name="_CommentBox" />
        }
        
    </div>
}

<div class="modal" id="OrderModal" role="dialog">
    <div class="modal-dialog modal-md" style="text-align:left; background-color:white; max-width:900px">
        <div style="width:900px;">
            <form id="buyFormData" asp-controller="Order" asp-action="BuyNow" method="post" class="form-horizontal d-block">
                <div class="modal-content justify-content-center" style="border-width:1px;">
                    <div class="modal-header" style="width:800px;">
                        <h2 class="modal-title text-center"><strong><i class="fa fa-cubes" aria-hidden="true" style="margin-right:5px;"></i>THÔNG TIN ĐƠN HÀNG</strong></h2>
                    </div>
                    <div class="modal-body">
                        <input type="text" id="pTotalMoney" name="pTotalMoney" hidden="hidden" />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Họ và tên:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingFullName" name="ShippingFullName" value="" placeholder="Your Name" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Số điện thoại:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingPhone" name="ShippingPhone" value="" placeholder="+84" class="form-control" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Tỉnh/Thành phố:</strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingCity" name="ShippingCity" value="" placeholder="Your City" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Quận/Huyện:</strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingDistrict" name="ShippingDistrict" value="" placeholder="Your District" class="form-control" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Phường/Xã:</strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingTown" name="ShippingTown" value="" placeholder="Your Town" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Địa chỉ chi tiết:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-12">
                                        <input type="text" id="ShippingAddress" name="ShippingAddress" value="" placeholder="Your Address" class="form-control" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Email:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-12">
                                        <input type="email" id="ShippingEmail" name="ShippingEmail" value="" placeholder="name@examle.com" class="form-control" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-5"><strong>Loại thanh toán:<span style="color: red">(*)</span></strong></label>
                                    <div class="col-sm-12">
                                        @{
                                            int PaymentType = 0;
                                        }
                                        @Html.DropDownList("PaymentType",new[]
                                        {
                                        new SelectListItem{Text="Thanh toán khi nhận hàng", Value="0", Selected= (PaymentType== 0)},
                                        new SelectListItem{Text="Thanh toán khi đặt hàng", Value="1", Selected= (PaymentType== 1)},
                                        }, new { @name = "PaymentType", @class="searchText form-control select"})
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-3"><strong>Mô tả của bạn:</strong></label>
                                <div class="col-sm-12">
                                    <textarea class="form-control" name="cDescription" id="cDescription" cols="50" rows="5" style="border:double 4px orange;"></textarea>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-sm-7">
                                    <h2><label class="control-label col-md-12"><strong>Tổng tiền thanh toán:</strong></label></h2>
                                </div>
                                <div class="col-sm-3">
                                    <h2><strong style="color:red;" id="textTotalMoney"></strong></h2>
                                </div>
                                <div class="col-sm-2">
                                    <h2><strong>VNĐ</strong></h2>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-sm btn-success" id="cpCopyBtn"><i class="fa fa-check" aria-hidden="true"></i> Đặt hàng</button>
                        <button type="button" class="btn btn-sm btn-default btn-dimiss-modal" id="btnCloseModal">
                            <i class="fa fa-times"></i> Đóng
                        </button>
                    </div>
                </div>

            </form>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        
        $('[data-quantity="plus"]').click(function (e) {
            e.preventDefault();
            fieldName = $(this).attr('data-field');
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            if (!isNaN(currentVal)) {
                $('input[name=' + fieldName + ']').val(currentVal + 1);
            } else {
                $('input[name=' + fieldName + ']').val(0);
            }
            sumTotal();
        });
        $('[data-quantity="minus"]').click(function (e) {
            e.preventDefault();
            fieldName = $(this).attr('data-field');
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            if (!isNaN(currentVal) && currentVal > 0) {
                $('input[name=' + fieldName + ']').val(currentVal - 1);
            } else {
                $('input[name=' + fieldName + ']').val(0);
            }
            sumTotal();
        });

        $('.cl-class > button').click(function () {
            $('.cl-class > button').css('background-color', 'white');
            $(this).css('background-color', '#00CCCC');
            $('#cColor').val($(this).val());
            getQuantityInstock();
        });

        $('.si-class > button').click(function () {
            $('.si-class > button').css('background-color', 'white');
            $(this).css('background-color', '#00CCCC');
            $('#cSize').val($(this).val());
            getQuantityInstock();
        });

        var er = document.getElementById('error')
        if (er != null) {
            if ($('#error').text() == 'Failed')
                swal("Không thành công", "Thao tác thất bại, vui lòng thực hiện lại", "error");
            else
                swal("Thành công", "Thao tác thành công", "success");
        }

    });

    document.querySelector('#buyFormData').addEventListener('submit', function (e) {
        var form = this;

        e.preventDefault();
        if (checkValidateData() && checkOrderData()) {
            swal("Bạn chắc chắn lưu những thay đổi này?", {
                title: 'Bạn chắc chắn muốn lưu nhưng thay đổi này?',
                icon: 'info',
                buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    form.submit();
                } else {
                    swal("Đã hủy", "Bạn đã không lưu những thay đổi này!", "error");
                }
            });
        }
    });

    function getQuantityInstock() {
        $.ajax({
            data: { cColorId: $('#cColor').val(),
                cSizeId: $('#cSize').val(),
                cProductId: $('#cProductId').val()
            },
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/GetQuantityInstock',
            type: 'GET',
            success: function (result) {
                 $('#mQuantityInstock').text(result);
            }
        });
    }

    function sumTotal() {
        let mQuantity = parseInt($('#quantity').val().replace(/,/g, '') || 0) || 0;
        let mPrice = parseFloat(@Model.Item1.Price) || 0;
        $('#cQuantity').val(mQuantity);
        $('#cPrice').val(mPrice);
        $('#cTotalMoney').val(mQuantity * mPrice);
        $('#pTotalMoney').val(mQuantity * mPrice);
        $('#totalMoney').text(commasThousands(mQuantity * mPrice) + ' VND');
        $('#textTotalMoney').text(commasThousands($('#pTotalMoney').val()));
    }

    function commasThousands(nStr) {
        nStr += '';
        nStr = nStr.replace(/,/g, '');
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    function checkValidateData() {
        if ($('#cQuantity').val() == '' || $('#cQuantity').val() == '0') {
            sweetAlert("Thông báo", "Thông tin số lượng sản phẩm không được để trống", "error");
            return false;
        }
        if ($('#cSize').val() == '') {
            sweetAlert("", "Vui lòng chọn kích cỡ", "error");
            return false;
        }
        if ($('#cColor').val() == '') {
            sweetAlert("", "Vui lòng chọn màu sắc", "error");
            return false;
        }
        return true;
    }

    function validatePhoneNumber(code) {
        var regex = /(84|0[3|5|7|8|9])+([0-9]{8})\b/;
        return regex.test(code);
    }
    function checkOrderData() {
        if ($('#ShippingFullName').val() == '') {
            sweetAlert("Thông báo", "Thông tin Họ tên người mua hàng không được để trống", "error");
            return false;
        }
        if ($('#ShippingPhone').val() == '') {
            sweetAlert("", "Thông tin Số điện thoại không được để trống", "error");
            return false;
        }
        if (!validatePhoneNumber($('#ShippingPhone').val())) {
            sweetAlert("Thông báo", "Thông tin Số điện thoại không đúng định dạng", "error");
            return false;
        }
        if ($('#ShippingAddress').val() == '') {
            sweetAlert("", "Thông tin địa chỉ không được địa chỉ", "error");
            return false;
        }
        return true;
    }


    function changeImageProd(strImage) {
        $('#imgProd').attr('src', '/images/' + strImage);
        getQuantityInstock();
    }
    function changeLikeCount() {
        $.ajax({
            data: { cProductId: $('#cProductId').val() },
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/ReleaseHeart',
            type: 'GET',
            success: function (response) {
                location.reload();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                location.reload();
            }
        });
    }

    function AddToCart() {
        if (checkValidateData()) {
            swal("Bạn muốn thêm nhanh vào giỏ hàng của mình?", {
                title: 'Bạn muốn thêm nhanh vào giỏ hàng của mình?',
                icon: 'info',
                buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
            }).then(function (isConfirm) {
                if (isConfirm) {
                    var _total_money = $('#cTotalMoney').val();
                    var _color = $('#cColor').val();
                    var _size = $('#cSize').val();
                    var _quantity = $('#cQuantity').val();
                    var _price = $('#cPrice').val();
                    var _product_id = $('#cProductId').val();
                    var _description = $('#cDescription').val();
                    document.location = "/Product/AddToCart?cTotalMoney=" + _total_money + "&cColor=" + _color + "&cSize=" + _size + "&cQuantity=" + _quantity + "&cPrice=" + _price
                        + "&cProductId=" + _product_id + "&cDescription=" + _description;
                } else {
                    swal("Đã hủy", "Bạn đã không lưu những thay đổi này!", "error");
                }
            });
        }
    }

    function BuyNow(){
        var products = [];
        var _product = {};
        _product.color = parseInt($('#cColor').val());
        _product.size = parseInt($('#cSize').val());
        _product.price = parseFloat($('#cPrice').val());
        _product.quantity = parseInt($('#cQuantity').val());
        _product.totalMoneyItem = parseFloat($('#cTotalMoney').val());
        _product.productId = $('#cProductId').val();
        products.push(_product);

        $.ajax({
            data: {
                products: JSON.stringify(products)
            },
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/Order',
            type: 'GET'
        });

        //Lấy thông tin người dùng
        $.ajax({
            contentType: 'application/json',
            dataType: 'json',
            url: '/Product/GetCustomerInfo',
            type: 'GET',
            success: function (result) {
                $("#ShippingFullName").val(result.name);
                $("#ShippingPhone").val(result.phoneNumber);
                $("#ShippingAddress").val(result.address);
                $("#ShippingEmail").val(result.email);
            }
        });
        $('#OrderModal').modal('show');
    }

    $('#btnCloseModal').click(function () {
        $('#OrderModal').modal('hide');
    });

    function SCRate(){
        for(var i = 1; i<= @totalRating; i++){
            $("#sRate" + i).attr('class', 'starGlowN');
        }
    }

    $(function(){
        SCRate();
    });
</script>