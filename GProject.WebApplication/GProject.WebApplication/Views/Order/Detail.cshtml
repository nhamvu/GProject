@model List<GProject.WebApplication.Models.OrderDto>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using GProject.WebApplication.Models
@using GProject.Api.MyServices.Services;
@using GProject.WebApplication.Helpers;
@using GProject.Data.DomainClass;
@{
    ViewBag.Title = "Chi tiết đơn đặt hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    Pager pager = new Pager();
    int pageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
    var OrderData = Model.Select(c => c.Order).FirstOrDefault();
}
<style>
    label {
        color: black;
    }

    h1 {
        color: black;
    }

    .sticky-header th {
        position: sticky;
        top: 0px;
        z-index: 1;
        background-color: #E5E5E5;
    }

    .sticky-table {
        border-collapse: separate !important;
    }

</style>

@if (@ViewData["Mess"] != null)
{
    <p style="visibility: hidden;" id="error">@ViewData["Mess"]</p>
}
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title" style="text-align:center; height:50px; padding:10px 10px 10px 10px;">
                Thông tin khách hàng
            </h3>
        </div>
        <div class="panel-body">
            <div class="table-responsive" style="overflow-y: auto; max-height: 700px;">
                <table class="table table-bordered">
                    <tr>
                        <th style="width:300px;">Thông tin</th>
                        <td><label>Thông tin liên quan</label></td>
                    </tr>
                    <tr>
                        <th>Tên khách hàng</th>
                        <td><label>@OrderData.ShippingFullName.NullToString()</label></td>
                    </tr>
                    <tr>
                        <th>Email</th>
                        <td><label>@OrderData.ShippingEmail.NullToString()</label></td>
                    </tr>
                    <tr>
                        <th>Địa chỉ</th>
                        <td><label>@OrderData.ShippingAddress.NullToString()</label></td>
                    </tr>
                    <tr>
                        <th>Ngày đặt</th>
                        <td><label>@OrderData.CreateDate.NullToString()</label></td>
                    </tr>
                    <tr>
                        <th>Phí ship</th>
                        <td><label>@string.Format("{0:0,0} VNĐ", OrderData.ShippingFee)</label></td>
                    </tr>
                    <tr>
                        <th>Trạng thái</th>
                        <td>
                            <label>
                                
                                    @{
                                        switch ((int)OrderData.Status)
                                        {
                                            case 0:
                                                <button type="button" class="btn btn-secondary">Chờ xác nhận</button>
                                                break;
                                            case 6:
                                                <button type="button" class="btn btn-warning">Đã xác nhận</button>
                                                break;
                                            case 1:
                                                <button type="button" class="btn btn-info">Đang vận chuyển</button>
                                                break;
                                            case 2:
                                                <button type="button" class="btn btn-primary">Đang giao hàng</button>
                                                break;
                                            case 3:
                                                <button type="button" class="btn btn-success">Đã hoàn thành</button>
                                                break;
                                            default:
                                                <button type="button" class="btn btn-danger">Đã hủy</button>
                                                break;
                                        }
                                    }
                                
                            </label>
                        </td>
                    </tr>
                    <tr>
                        <th>Mô tả</th>
                        <td>@OrderData.Description</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<hr style="color:red;" />
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title" style="text-align:center; height:50px; padding:10px 10px 10px 10px;">
                Danh sách đơn đặt hàng
            </h3>
        </div>
        <div class="panel-body">
            <div class="table-responsive" style="overflow-y: auto; max-height: 700px;">
                <table class="table table-bordered table-hover sticky-table">
                    <thead class="sticky-header">
                        <tr>
                            <th>STT</th>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Màu sắc</th>
                            <th>Size</th>
                            <th>Số lượng</th>
                            <th>Đơn giá</th>
                            <th>Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            int index = 0;
                            foreach (var item in Model)
                            {
                                index++;
                                <tr>
                                    <td>@(index)</td>
                                    <td><img style="width:70px;height:70px;" src="~/images/@item.ProductVariation.Image.NullToString()" /></td>
                                    <td>@item.Product.Name</td>
                                    <td>@item.Color.Name</td>
                                    <td>@item.Size.Code</td>
                                    <td>@item.OrderDetail.Quantity</td>
                                    <td>@string.Format("{0:0,0} VNĐ", item.OrderDetail.Price)</td>
                                    <td>@string.Format("{0:0,0} VNĐ", item.OrderDetail.TotalMoney)</td>
                                   
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="row">
    @if ((int)OrderData.Status != 0 && (int)OrderData.Status != 3)
    {
        <button type="button" onclick="WaitOrder()" class="btn btn-outline-secondary col-md-2 m-1"><i class="fa fa-clock-o" style="margin-right:10px;"></i>Chờ xác nhận</button>
    }
    @if ((int)OrderData.Status != 6 && (int)OrderData.Status != 3)
    {
        <button type="button" onclick="ConfirmOrder()" class="btn btn-outline-warning col-md-2 m-1"><i class="fas fa-check-square" style="margin-right:10px;"></i>Xác nhận đơn hàng</button>
    }
    @if ((int)OrderData.Status != 1 && (int)OrderData.Status != 3)
    {
        <button type="button" onclick="DeliveryOrder()" class="btn btn-outline-info col-md-2 m-1"><i class="fa fa-truck" style="margin-right:10px;"></i>Đang vận chuyển</button>
    }
    @if ((int)OrderData.Status != 2 && (int)OrderData.Status != 3)
    {
        <button type="button" onclick="DangGiaoHang()" class="btn btn-outline-info col-md-2 m-1"><i class="fa fa-truck" style="margin-right:10px;"></i>Đang giao hàng</button>
    }
    @if ((int)OrderData.Status != 3)
    {
        <button type="button" onclick="CompleteOrder()" class="btn btn-outline-success col-md-2 m-1"><i class="fas fa-check-double" style="margin-right:10px;"></i>Hoàn thành đơn hàng</button>
    }
    @if ((int)OrderData.Status != 5 && (int)OrderData.Status != 3)
    {
        <button type="button" onclick="CancelOrder()" class="btn btn-outline-danger col-md-2 m-1"><i class="fas fa-window-close" style="margin-right:10px;"></i>Hủy đơn hàng</button>
    }
    </div>
<script>
    function WaitOrder() {
        swal("Bạn chắc chắn muốn chuyển trạng đơn hàng này sang chờ xác nhận?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=0'
            }
        });
    }
    function ConfirmOrder(){
        swal("Bạn chắc chắn muốn xác nhận đơn hàng này?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=6'
            }
        });
    }
    function DeliveryOrder(){
        swal("Bạn chắc chắn muốn chuyển trạng thái đơn hàng này sang đang vận chuyển?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=1'
            }
        });
    }
    function CompleteOrder() {
        swal("Bạn chắc chắn muốn hoàn thành đơn hàng này?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=3'
            }
        });
    }
    function CancelOrder() {
        swal("Bạn chắc chắn muốn hủy đơn hàng này?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=5'
            }
        });
    }

    function DangGiaoHang() {
        swal("Bạn chắc chắn muốn hủy đơn hàng này?", {
            title: '',
            icon: 'info',
            buttons: ["Không, tôi cần xem lại", "Có, tôi đồng ý"],
        }).then(function (isConfirm) {
            if (isConfirm) {
                window.location = '/Order/ChangeStatus?id=@OrderData.Id.ToString()&status=2'
            }
        });
    }
</script>